{"ast":null,"code":"import _slicedToArray from \"/Users/Wael/sniper/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\n\nvar useAudio = function useAudio(url) {\n  _s();\n\n  // create audio only once\n  var _React$useState = React.useState(new Audio(url)),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      audio = _React$useState2[0]; // same as React.Component.forceUpdate\n\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      _forceUpdate = _React$useState4[1];\n\n  var forceUpdate = function forceUpdate() {\n    return _forceUpdate(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  React.useEffect(function () {\n    audio.play();\n    audio.addEventListener(\"play\", forceUpdate);\n    audio.addEventListener(\"pause\", forceUpdate);\n    audio.addEventListener(\"ended\", forceUpdate);\n    audio.addEventListener(\"timeupdate\", forceUpdate);\n    return function () {\n      audio.removeEventListener(\"play\", forceUpdate);\n      audio.removeEventListener(\"pause\", forceUpdate);\n      audio.removeEventListener(\"ended\", forceUpdate);\n      audio.addEventListener(\"timeupdate\", forceUpdate);\n    };\n    /**\n     * about useEffect's second argument\n     *    give nothing        => same as componentDidUpdate\n     *    give an empty array => same as componentWillMount\n     */\n  }, []);\n\n  var play = function play() {\n    console.log(1);\n    audio.play();\n  };\n\n  var pause = function pause() {\n    return audio.pause();\n  };\n\n  var jump = function jump(value) {\n    return audio.currentTime += value;\n  };\n\n  return [!audio.paused, audio.currentTime, play, pause, jump];\n};\n\n_s(useAudio, \"rev/24VU1dRkl8CNdP+yX77HYZo=\");\n\nexport default useAudio;","map":{"version":3,"sources":["/Users/Wael/sniper/src/useAudio.js"],"names":["React","useAudio","url","useState","Audio","audio","_forceUpdate","forceUpdate","prevState","useEffect","play","addEventListener","removeEventListener","console","log","pause","jump","value","currentTime","paused"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AAAA;;AACxB;AACA,wBAAgBF,KAAK,CAACG,QAAN,CAAe,IAAIC,KAAJ,CAAUF,GAAV,CAAf,CAAhB;AAAA;AAAA,MAAOG,KAAP,uBAFwB,CAIxB;;;AACA,yBAAyBL,KAAK,CAACG,QAAN,CAAe,KAAf,CAAzB;AAAA;AAAA,MAASG,YAAT;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,YAAY,CAAC,UAACE,SAAD;AAAA,aAAe,CAACA,SAAhB;AAAA,KAAD,CAAlB;AAAA,GAApB;;AAEAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAM;AACpBJ,IAAAA,KAAK,CAACK,IAAN;AACAL,IAAAA,KAAK,CAACM,gBAAN,CAAuB,MAAvB,EAA+BJ,WAA/B;AACAF,IAAAA,KAAK,CAACM,gBAAN,CAAuB,OAAvB,EAAgCJ,WAAhC;AACAF,IAAAA,KAAK,CAACM,gBAAN,CAAuB,OAAvB,EAAgCJ,WAAhC;AACAF,IAAAA,KAAK,CAACM,gBAAN,CAAuB,YAAvB,EAAqCJ,WAArC;AAEA,WAAO,YAAM;AACXF,MAAAA,KAAK,CAACO,mBAAN,CAA0B,MAA1B,EAAkCL,WAAlC;AACAF,MAAAA,KAAK,CAACO,mBAAN,CAA0B,OAA1B,EAAmCL,WAAnC;AACAF,MAAAA,KAAK,CAACO,mBAAN,CAA0B,OAA1B,EAAmCL,WAAnC;AACAF,MAAAA,KAAK,CAACM,gBAAN,CAAuB,YAAvB,EAAqCJ,WAArC;AACD,KALD;AAOA;AACJ;AACA;AACA;AACA;AACG,GAnBD,EAmBG,EAnBH;;AAqBA,MAAMG,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAT,IAAAA,KAAK,CAACK,IAAN;AACD,GAHD;;AAKA,MAAMK,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMV,KAAK,CAACU,KAAN,EAAN;AAAA,GAAd;;AACA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,WAAYZ,KAAK,CAACa,WAAN,IAAqBD,KAAjC;AAAA,GAAb;;AAEA,SAAO,CAAC,CAACZ,KAAK,CAACc,MAAR,EAAgBd,KAAK,CAACa,WAAtB,EAAmCR,IAAnC,EAAyCK,KAAzC,EAAgDC,IAAhD,CAAP;AACD,CAtCD;;GAAMf,Q;;AAwCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nconst useAudio = (url) => {\n  // create audio only once\n  const [audio] = React.useState(new Audio(url));\n\n  // same as React.Component.forceUpdate\n  const [, _forceUpdate] = React.useState(false);\n  const forceUpdate = () => _forceUpdate((prevState) => !prevState);\n\n  React.useEffect(() => {\n    audio.play();\n    audio.addEventListener(\"play\", forceUpdate);\n    audio.addEventListener(\"pause\", forceUpdate);\n    audio.addEventListener(\"ended\", forceUpdate);\n    audio.addEventListener(\"timeupdate\", forceUpdate);\n\n    return () => {\n      audio.removeEventListener(\"play\", forceUpdate);\n      audio.removeEventListener(\"pause\", forceUpdate);\n      audio.removeEventListener(\"ended\", forceUpdate);\n      audio.addEventListener(\"timeupdate\", forceUpdate);\n    };\n\n    /**\n     * about useEffect's second argument\n     *    give nothing        => same as componentDidUpdate\n     *    give an empty array => same as componentWillMount\n     */\n  }, []);\n\n  const play = () => {\n    console.log(1);\n    audio.play();\n  };\n\n  const pause = () => audio.pause();\n  const jump = (value) => (audio.currentTime += value);\n\n  return [!audio.paused, audio.currentTime, play, pause, jump];\n};\n\nexport default useAudio;\n"]},"metadata":{},"sourceType":"module"}